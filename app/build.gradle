apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
  compileSdkVersion 31
  buildToolsVersion "30.0.3"
  useLibrary("android.test.runner")
  useLibrary("android.test.base")
  defaultConfig {
    applicationId "com.example.userlist"
    minSdkVersion 21
    targetSdkVersion 31
    versionCode 1
    versionName "1.0"
    buildConfigField "String", "API_KEY", localProperties['apiKey']
    buildConfigField "String", "HASH", localProperties['hash']
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    packagingOptions {
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
  buildFeatures {
    viewBinding = true
    dataBinding = true
  }

}

dependencies {

  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'androidx.core:core-ktx:1.7.0'
  implementation 'androidx.appcompat:appcompat:1.3.1'
  implementation 'com.google.android.material:material:1.4.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
  implementation 'androidx.activity:activity-ktx:1.4.0'

  //Testing
  //androidTestImplementation 'junit:junit:4.13.2'
  androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'

  // AndroidJUnitRunner and JUnit Rules
  androidTestImplementation('androidx.test:runner:1.4.0')
  androidTestImplementation('androidx.test:rules:1.4.0')

  //Mockk and mockwebserver
  androidTestImplementation("io.mockk:mockk-android:1.12.0")
  androidTestImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")

  // Assertions
  testImplementation('androidx.test.ext:junit:1.1.3')

  androidTestImplementation('androidx.test.ext:junit:1.1.3')
  androidTestImplementation('androidx.test.ext:truth:1.4.0')
  androidTestImplementation('com.google.truth:truth:1.0.1')

  // test coroutines

  //For runBlockingTest, CoroutineDispatcher etc.
  androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2") {
    // conflicts with mockito due to direct inclusion of byte buddy
    exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"

    //expresso
    debugImplementation("androidx.fragment:fragment-testing:1.3.6")
    debugImplementation('androidx.test.espresso:espresso-core:3.4.0')
    debugImplementation('androidx.test.espresso:espresso-contrib:3.4.0')
    debugImplementation('androidx.test.espresso:espresso-intents:3.4.0')
    debugImplementation('androidx.test.espresso:espresso-accessibility:3.4.0')
    debugImplementation('androidx.test.espresso:espresso-web:3.4.0')
    debugImplementation('androidx.test.espresso.idling:idling-concurrent:3.4.0')

  }


  def lifecycle_version = "2.4.0"
  def fragments_version = "1.3.6"

  // viewmodel
  implementation ("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
  implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
  implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-common:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

  // fragments
  implementation "androidx.fragment:fragment-ktx:$fragments_version"

  //Recyclerview
  implementation "androidx.recyclerview:recyclerview:1.2.1"

  //Retrofit
  implementation 'com.google.code.gson:gson:2.8.6'
  implementation 'com.squareup.retrofit2:retrofit:2.9.0'
  implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
  implementation "com.squareup.retrofit2:converter-moshi:2.6.2"

  //ok http intercepter
  implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'

  //Glide
  implementation 'com.github.bumptech.glide:glide:4.12.0'
  annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'

  //corputines
  implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0")
  implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0")
  implementation("com.google.code.gson:gson:2.8.6")

  //dagger
  //dagger2
  api 'com.google.dagger:dagger:2.35.1'
  api 'com.google.dagger:dagger-android:2.35.1'
  api 'com.google.dagger:dagger-android-support:2.35.1'

  annotationProcessor 'com.google.dagger:dagger-compiler:2.35.1'
  kapt 'com.google.dagger:dagger-compiler:2.35.1'

  annotationProcessor 'com.google.dagger:dagger-android-processor:2.35.1'
  kapt 'com.google.dagger:dagger-android-processor:2.35.1'

  compileOnly 'javax.annotation:jsr250-api:1.0'
  implementation 'javax.inject:javax.inject:1'

}
