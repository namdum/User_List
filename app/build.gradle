apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
  compileSdkVersion 33
  buildToolsVersion "33.0.2"
  useLibrary("android.test.runner")
  useLibrary("android.test.base")
  defaultConfig {
    applicationId "com.example.userlist"
    minSdkVersion 23
    targetSdkVersion 33
    versionCode 1
    versionName "1.0"
    buildConfigField "String", "API_KEY","\"" +  localProperties['apiKey'] + "\""
    buildConfigField "String", "HASH","\"" +  localProperties['hash']+ "\""
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    packagingOptions {
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    customDebugType {
      debuggable true
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
  buildFeatures {
    viewBinding = true
    dataBinding = true
  }

}

dependencies {

  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'androidx.core:core-ktx:1.9.0'
  implementation 'androidx.appcompat:appcompat:1.6.1'
  //implementation 'com.google.android.material:material:1.4.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
  implementation 'androidx.activity:activity-ktx:1.6.1'


    implementation "com.google.android.material:material:1.8.0"


  //Testing
  //androidTestImplementation 'junit:junit:4.13.2'
  androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'

  // AndroidJUnitRunner and JUnit Rules
  androidTestImplementation('androidx.test:runner:1.5.2.0')
  androidTestImplementation('androidx.test:rules:1.5.0')

  //Mockk and mockwebserver
  androidTestImplementation("io.mockk:mockk-android:1.12.0")
  androidTestImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")

  // Assertions
  testImplementation('androidx.test.ext:junit:1.1.5')

  androidTestImplementation('androidx.test.ext:junit:1.1.5')
  androidTestImplementation('androidx.test.ext:truth:1.5.0')
  androidTestImplementation('com.google.truth:truth:1.1.3')

  // test coroutines

  //For runBlockingTest, CoroutineDispatcher etc.
  androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2") {
    // conflicts with mockito due to direct inclusion of byte buddy
    exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"

    //expresso
    debugImplementation("androidx.fragment:fragment-testing:1.3.6")
    debugImplementation('androidx.test.espresso:espresso-core:3.4.0')
    debugImplementation('androidx.test.espresso:espresso-contrib:3.4.0')
    debugImplementation('androidx.test.espresso:espresso-intents:3.4.0')
    debugImplementation('androidx.test.espresso:espresso-accessibility:3.4.0')
    debugImplementation('androidx.test.espresso:espresso-web:3.4.0')
    debugImplementation('androidx.test.espresso.idling:idling-concurrent:3.4.0')

    def nav_version = "2.4.2"

    // Java language implementation
    implementation("androidx.navigation:navigation-fragment:$nav_version")
    implementation("androidx.navigation:navigation-ui:$nav_version")

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")

    // Jetpack Compose Integration
    implementation("androidx.navigation:navigation-compose:$nav_version")
    implementation 'androidx.preference:preference:1.2.0'

    def lifecycle_version = "2.4.0"
    def fragments_version = "1.3.6"

    // viewmodel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    //implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.0"

    // fragments
    implementation "androidx.fragment:fragment-ktx:$fragments_version"

    //Recyclerview
    implementation "androidx.recyclerview:recyclerview:1.2.1"

    //Retrofit
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.6.2"

    //ok http intercepter
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.15.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'

    //coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0")
    implementation("com.google.code.gson:gson:2.8.6")

    //dagger
    //dagger2
    api 'com.google.dagger:dagger:2.45'
    api 'com.google.dagger:dagger-android:2.45'
    api 'com.google.dagger:dagger-android-support:2.45'

    annotationProcessor 'com.google.dagger:dagger-compiler:2.45'
    kapt 'com.google.dagger:dagger-compiler:2.45'

    annotationProcessor 'com.google.dagger:dagger-android-processor:2.45'
    kapt 'com.google.dagger:dagger-android-processor:2.45'

    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'javax.inject:javax.inject:1'

    //spotify api
   //// implementation "com.adamratzman:spotify-api-kotlin-core:4.0.0"

  }
}
